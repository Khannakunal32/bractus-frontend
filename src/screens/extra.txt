import React, { Component } from 'react'
import jwt_decode from "jwt-decode";
import userImage from '../Assets/Images/user.png'
import team from '../Assets/Images/team.png'
import admin from '../Assets/Images/admin.png'
import order from '../Assets/Images/order.png'
import cashback from '../Assets/Images/cashback.png'
import logOut from '../Assets/Images/logOut.png'
import axios from 'axios';
import { Table} from 'react-bootstrap';
class Dashboard extends Component {
   logoutFuncton = ()=>{
    localStorage.removeItem('token');
    localStorage.removeItem('isLoggedIn');
    this.props.history.push('/')
   
  }
 state={
   showProfile:false,
   admin:false,
   allusers:[]
 }

approveOrderProduct=(id)=>{
  
  axios
  .post(` https://testapi.amaprods.com/api/users/updatePackage`, {
    package: "Paid",
    id:id ,
  })
  .then((res) => {
    const data = res.data
    // Cookies.set('user', user.payload, { expires: 7 }, { path: '/*' });
    if (data.success) {
    
     alert('successfully approved order')
    } else {
      alert('Invalid request')
   
      // this.loaderDeactive()
    }
  })
  .catch(function (error) {
    console.log(error)
    alert('connection problem in api')
  })
    }

 getUsers=()=>{
   
axios
.get(` https://testapi.amaprods.com/api/users/`, {
})
.then((res) => {
  const data = res.data
  // Cookies.set('user', user.payload, { expires: 7 }, { path: '/*' });
  if (data.success) {
  console.log(data.data)
  this.setState({
    allusers:data.data
  })

  } else {
    alert('Invalid request')
 
    // this.loaderDeactive()
  }
})
.catch(function (error) {
  console.log(error)
  alert('connection problem in api')
})
 }

  render() {
  
    if(localStorage.getItem('isLoggedIn')){
      var decoded = jwt_decode(localStorage.getItem('token'));
    
      return (
        <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexWrap:'wrap'}}>
          {this.state.showProfile==true?<div className="profile-dispay">
           <p style={{fontSize:'2rem',fontWeight:'bold'}}>Your Profile</p> 
          <h1>Welcome {decoded.result.firstName} {decoded.result.lastName}</h1> 
          <h1>Email: {decoded.result.email}</h1> 
          <h1>Phone: {decoded.result.Phone}</h1> 
          <h1>SponsorId: {decoded.result.SponsorId}</h1> 
          <h1>Your Id: {decoded.result.id}</h1> 
          <h1>PanCard: {decoded.result.panCard}</h1> 
          <h1>AadharCard: {decoded.result.AadharCard}</h1> 
          <h1>Package: {decoded.result.package}</h1> 
           <button  onClick={()=>{this.setState({showProfile:false})}}>Close</button>
         </div>:<div> <span style={{display:'flex',flexDirection:'column',textAlign:'center'}}><img src={userImage} onClick={()=>{this.setState({showProfile:true})}} className="profile-page-btn"></img>Profile</span></div>
       }
       {decoded.result.email==("maxakash1999@gmail.com") ||('khannakunal31@gmail.com')? <span style={{display:'flex',flexDirection:'column',textAlign:'center'}}>  <img src={admin} className="profile-page-btn" onClick={()=>{this.setState({admin:true});this.getUsers()}}></img>Admin</span>:null}
       {this.state.admin==true? <Table  striped bordered hover id="userTable"
       
       >

  <thead>
    <tr>
   
      <th>First Name</th>
      <th>Last Name</th>
      <th>Id</th>
      <th>Email</th>
      <th>Phone</th>
      <th>Package</th>
      <th>SponsorId</th>
      
    </tr>
    
    
  </thead>
 
  {this.state.allusers && this.state.allusers.length > 0
            ? this.state.allusers.map((value, index) => {
              return (
                <tbody className="userColumn-table">
                <tr>
                  <td>{value.firstName}</td>
                  <td>{value.lastName}</td>
              
                  <td>{value.id}</td>
            <td>{value.email}</td>
           
            <td>{value.Phone}</td>
            <td>{value.package}</td>
           
            <td>{value.SponsorId}</td>
            <td><button onClick={()=>this.approveOrderProduct(value.id)}>Update Package</button></td>
                </tr>
               
              </tbody>
                    )
            })
            : null}
       </Table>
      :null}
       {localStorage.getItem('isLoggedIn')=='true'?<span style={{display:'flex',flexDirection:'column',textAlign:'center'}}><img src={logOut} id="logOutBtn" onClick={()=>{this.logoutFuncton()}}></img>LogOut</span>:null}   
      
       <span style={{display:'flex',flexDirection:'column',textAlign:'center'}}><img src={order} onClick={()=>{ this.props.history.push('/Packages')}} className="profile-page-btn"></img> Order/Buy</span>
       
       <span style={{display:'flex',flexDirection:'column',textAlign:'center'}}>  <img src={team} className="profile-page-btn"></img>Downlinks</span>
       <span style={{display:'flex',flexDirection:'column',textAlign:'center'}}> <img src ={cashback} className="profile-page-btn"></img>Credits</span>
       
      
       </div>
        )
    }else{
      return null
    }
    
    

  
  }
}
export default Dashboard